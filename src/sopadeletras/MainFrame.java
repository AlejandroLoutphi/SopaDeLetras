/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package sopadeletras;
import datastructures.LinkedList;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileWriter;
import javax.swing.JFileChooser;
import java.io.File;
import javax.swing.JOptionPane;
import java.io.FileReader;
import java.io.IOException;
import java.util.List;
import java.util.ArrayList;
import javax.swing.JLabel;
import static javax.swing.SwingConstants.CENTER;

/**
 *
 * @author ayahzaheraldeen, Alejandro Loutphi
 */
public class MainFrame extends javax.swing.JFrame {

    /**
     * Creates new form MainFrame3
     */
    public MainFrame() {
        initComponents();
        this.DictionaryTextArea.setEditable(false);
        jLabel1.setHorizontalAlignment(CENTER);
        jLabel2.setHorizontalAlignment(CENTER);
        jLabel3.setHorizontalAlignment(CENTER);
        jLabel4.setHorizontalAlignment(CENTER);
        jLabel5.setHorizontalAlignment(CENTER);
        jLabel6.setHorizontalAlignment(CENTER);
        jLabel7.setHorizontalAlignment(CENTER);
        jLabel8.setHorizontalAlignment(CENTER);
        jLabel9.setHorizontalAlignment(CENTER);
        jLabel10.setHorizontalAlignment(CENTER);
        jLabel11.setHorizontalAlignment(CENTER);
        jLabel12.setHorizontalAlignment(CENTER);
        jLabel13.setHorizontalAlignment(CENTER);
        jLabel14.setHorizontalAlignment(CENTER);
        jLabel15.setHorizontalAlignment(CENTER);
        jLabel16.setHorizontalAlignment(CENTER);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField2 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        DictionaryTextArea = new javax.swing.JTextArea();
        SaveButton = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        TimeLabel = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        LoadButton = new javax.swing.JButton();
        FindWordButton = new javax.swing.JButton();
        jLabel18 = new javax.swing.JLabel();

        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setBackground(new java.awt.Color(255, 255, 153));
        jLabel1.setFont(new java.awt.Font("October Condensed Devanagari", 1, 18)); // NOI18N
        jLabel1.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jLabel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 255)));
        jLabel1.setMaximumSize(new java.awt.Dimension(44, 44));
        jLabel1.setMinimumSize(new java.awt.Dimension(44, 44));
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 110, 50, 40));

        jLabel2.setBackground(new java.awt.Color(255, 255, 153));
        jLabel2.setFont(new java.awt.Font("October Condensed Devanagari", 1, 18)); // NOI18N
        jLabel2.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jLabel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 255)));
        jLabel2.setMaximumSize(new java.awt.Dimension(44, 44));
        jLabel2.setMinimumSize(new java.awt.Dimension(44, 44));
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 110, 50, 40));

        jLabel3.setBackground(new java.awt.Color(255, 255, 153));
        jLabel3.setFont(new java.awt.Font("October Condensed Devanagari", 1, 18)); // NOI18N
        jLabel3.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jLabel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 255)));
        jLabel3.setMaximumSize(new java.awt.Dimension(44, 44));
        jLabel3.setMinimumSize(new java.awt.Dimension(44, 44));
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 110, 50, 40));

        jLabel4.setBackground(new java.awt.Color(255, 255, 153));
        jLabel4.setFont(new java.awt.Font("October Condensed Devanagari", 1, 18)); // NOI18N
        jLabel4.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jLabel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 255)));
        jLabel4.setMaximumSize(new java.awt.Dimension(44, 44));
        jLabel4.setMinimumSize(new java.awt.Dimension(44, 44));
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 190, 50, 40));

        jLabel5.setBackground(new java.awt.Color(255, 255, 153));
        jLabel5.setFont(new java.awt.Font("October Condensed Devanagari", 1, 18)); // NOI18N
        jLabel5.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jLabel5.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(0, 0, 255)));
        jLabel5.setMaximumSize(new java.awt.Dimension(44, 44));
        jLabel5.setMinimumSize(new java.awt.Dimension(44, 44));
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 110, 50, 40));

        jLabel6.setBackground(new java.awt.Color(255, 255, 153));
        jLabel6.setFont(new java.awt.Font("October Condensed Devanagari", 1, 18)); // NOI18N
        jLabel6.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jLabel6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 255)));
        jLabel6.setMaximumSize(new java.awt.Dimension(44, 44));
        jLabel6.setMinimumSize(new java.awt.Dimension(44, 44));
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 150, 50, 40));

        jLabel7.setBackground(new java.awt.Color(255, 255, 153));
        jLabel7.setFont(new java.awt.Font("October Condensed Devanagari", 1, 18)); // NOI18N
        jLabel7.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jLabel7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 255)));
        jLabel7.setMaximumSize(new java.awt.Dimension(44, 44));
        jLabel7.setMinimumSize(new java.awt.Dimension(44, 44));
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 150, 50, 40));

        jLabel8.setBackground(new java.awt.Color(255, 255, 153));
        jLabel8.setFont(new java.awt.Font("October Condensed Devanagari", 1, 18)); // NOI18N
        jLabel8.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jLabel8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 255)));
        jLabel8.setMaximumSize(new java.awt.Dimension(44, 44));
        jLabel8.setMinimumSize(new java.awt.Dimension(44, 44));
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 150, 50, 40));

        jLabel9.setBackground(new java.awt.Color(255, 255, 153));
        jLabel9.setFont(new java.awt.Font("October Condensed Devanagari", 1, 18)); // NOI18N
        jLabel9.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jLabel9.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 255)));
        jLabel9.setMaximumSize(new java.awt.Dimension(44, 44));
        jLabel9.setMinimumSize(new java.awt.Dimension(44, 44));
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 150, 50, 40));

        jLabel10.setBackground(new java.awt.Color(255, 255, 153));
        jLabel10.setFont(new java.awt.Font("October Condensed Devanagari", 1, 18)); // NOI18N
        jLabel10.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jLabel10.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 255)));
        jLabel10.setMaximumSize(new java.awt.Dimension(44, 44));
        jLabel10.setMinimumSize(new java.awt.Dimension(44, 44));
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 230, 50, 40));

        jLabel11.setBackground(new java.awt.Color(255, 255, 153));
        jLabel11.setFont(new java.awt.Font("October Condensed Devanagari", 1, 18)); // NOI18N
        jLabel11.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jLabel11.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 255)));
        jLabel11.setMaximumSize(new java.awt.Dimension(44, 44));
        jLabel11.setMinimumSize(new java.awt.Dimension(44, 44));
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 190, 50, 40));

        jLabel12.setBackground(new java.awt.Color(255, 255, 153));
        jLabel12.setFont(new java.awt.Font("October Condensed Devanagari", 1, 18)); // NOI18N
        jLabel12.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jLabel12.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 255)));
        jLabel12.setMaximumSize(new java.awt.Dimension(44, 44));
        jLabel12.setMinimumSize(new java.awt.Dimension(44, 44));
        getContentPane().add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 190, 50, 40));

        jLabel13.setBackground(new java.awt.Color(255, 255, 153));
        jLabel13.setFont(new java.awt.Font("October Condensed Devanagari", 1, 18)); // NOI18N
        jLabel13.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jLabel13.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 255)));
        jLabel13.setMaximumSize(new java.awt.Dimension(44, 44));
        jLabel13.setMinimumSize(new java.awt.Dimension(44, 44));
        getContentPane().add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 190, 50, 40));

        jLabel14.setBackground(new java.awt.Color(255, 255, 153));
        jLabel14.setFont(new java.awt.Font("October Condensed Devanagari", 1, 18)); // NOI18N
        jLabel14.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jLabel14.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 255)));
        jLabel14.setMaximumSize(new java.awt.Dimension(44, 44));
        jLabel14.setMinimumSize(new java.awt.Dimension(44, 44));
        getContentPane().add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 230, 50, 40));

        jLabel15.setBackground(new java.awt.Color(255, 255, 153));
        jLabel15.setFont(new java.awt.Font("October Condensed Devanagari", 1, 18)); // NOI18N
        jLabel15.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jLabel15.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 255)));
        jLabel15.setMaximumSize(new java.awt.Dimension(44, 44));
        jLabel15.setMinimumSize(new java.awt.Dimension(44, 44));
        getContentPane().add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 230, 50, 40));

        jLabel16.setBackground(new java.awt.Color(255, 255, 153));
        jLabel16.setFont(new java.awt.Font("October Condensed Devanagari", 1, 18)); // NOI18N
        jLabel16.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jLabel16.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 255)));
        jLabel16.setMaximumSize(new java.awt.Dimension(44, 44));
        jLabel16.setMinimumSize(new java.awt.Dimension(44, 44));
        getContentPane().add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 230, 50, 40));

        jLabel19.setText("Introduce la Palabra para buscar: ");
        getContentPane().add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, -1, -1));

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        DictionaryTextArea.setColumns(16);
        DictionaryTextArea.setRows(5);
        jScrollPane1.setViewportView(DictionaryTextArea);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 120, 210, 150));

        SaveButton.setText("Guardar");
        SaveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveButtonActionPerformed(evt);
            }
        });
        jPanel1.add(SaveButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 280, -1, -1));
        jPanel1.add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 60, 120, -1));

        TimeLabel.setText("Time: 0ms");
        jPanel1.add(TimeLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 20, 90, 20));

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "BFS", "DFS", " " }));
        jPanel1.add(jComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 20, -1, -1));

        LoadButton.setText("Cargar Archivo");
        LoadButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LoadButtonActionPerformed(evt);
            }
        });
        jPanel1.add(LoadButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, -1, -1));

        FindWordButton.setText("Buscar Palabra");
        FindWordButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FindWordButtonActionPerformed(evt);
            }
        });
        jPanel1.add(FindWordButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 60, -1, -1));

        jLabel18.setText("Diccionario:");
        jPanel1.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 100, -1, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 490, 330));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void LoadButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LoadButtonActionPerformed
        // TODO add your handling code here:
         JFileChooser fileChooser = new JFileChooser();
        File selectedFile = null;
        int returnValue = fileChooser.showOpenDialog(this);
        if (returnValue == JFileChooser.APPROVE_OPTION){
            selectedFile = fileChooser.getSelectedFile();
            
        }
        try {
            JOptionPane.showMessageDialog(this,"Archivo escojido:"+ selectedFile.getAbsolutePath(),"Archivo Cargado",JOptionPane.INFORMATION_MESSAGE);
        LinkedList<String> dictionaryWords = readFile(selectedFile);
            displayDictionaryWords(dictionaryWords);
        } catch(Exception e) {
           e.printStackTrace();
           JOptionPane.showMessageDialog(this,"Error" +e.getMessage(),"Error de Archivo",JOptionPane.ERROR_MESSAGE);
        }
        

    }//GEN-LAST:event_LoadButtonActionPerformed

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void FindWordButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FindWordButtonActionPerformed
        // TODO add your handling code here:
        String wordToSearch = jTextField1.getText().trim();
        
        if (wordToSearch.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter a word to search.");
            return;
        }

        // Get all JLabels in the grid (assuming 4x4 grid)
        JLabel[][] grid = {
            {jLabel1, jLabel2, jLabel3, jLabel4},
            {jLabel5, jLabel6, jLabel7, jLabel8},
            {jLabel9, jLabel10, jLabel11, jLabel12},
            {jLabel13, jLabel14, jLabel15, jLabel16}
        };

        boolean found = false;

        // Search for the word in the grid
        for (int i = 0; i < 4; i++) {
            for (int j = 0; j < 4; j++) {
                // Reset background color
                grid[i][j].setOpaque(true);
                grid[i][j].setBackground(null);

                if (grid[i][j].getText().equalsIgnoreCase(wordToSearch)) {
                    grid[i][j].setBackground(java.awt.Color.YELLOW);
                    found = true;
                }
            }
        }

        if (!found) {
            JOptionPane.showMessageDialog(this, "Palabra no Encontrada.");
        }
        
                                                  

    }//GEN-LAST:event_FindWordButtonActionPerformed
private void displayDictionaryWords(LinkedList<String>  dictionaryWords) throws Exception {
    StringBuilder sb = new StringBuilder();
    int counter=1;
    int count2 = 0;
    
    while (count2 < dictionaryWords.size() -1) {
        String word = dictionaryWords.getStringIndex(count2);
        sb.append(counter).append(". ").append(word).append(System.lineSeparator()); 
        counter++;
        count2 += 1;
    }
    
    DictionaryTextArea.setText(sb.toString()); // Set the concatenated string as the text of the text field
}
    private void SaveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveButtonActionPerformed
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();
    fileChooser.setDialogTitle("Guardar archivo de diccionario");
    int userSelection = fileChooser.showSaveDialog(this);
    
    if (userSelection == JFileChooser.APPROVE_OPTION) {
        File fileToSave = fileChooser.getSelectedFile();
        saveDictionaryToFile(fileToSave);
    }
}

private void saveDictionaryToFile(File file) {
    try (BufferedWriter writer = new BufferedWriter(new FileWriter(file))) {
        writer.write(DictionaryTextArea.getText());
        JOptionPane.showMessageDialog(this, "Diccionario guardado con éxito.");
    } catch (IOException e) {
        JOptionPane.showMessageDialog(this, "Error al guardar el diccionario: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
}

    }//GEN-LAST:event_SaveButtonActionPerformed

    private LinkedList<String> readFile(File file) throws Exception {
        
    LinkedList<String>  dictionaryWords = new LinkedList<String>(); // Initialize the list outside the try block
    try (BufferedReader br = new BufferedReader(new FileReader(file))) {
        String line;
        boolean readingBoard = false; // Flag to indicate whether reading the board letters or dictionary words
        LinkedList<String> boardLines = new LinkedList<String> (); // Store lines containing board letters

        while ((line = br.readLine()) != null) {
            // Check if the line contains board letters
            System.out.println("LINE: " + line);
            if (line.startsWith("tab")) {
                readingBoard = true; // Set flag to true to start reading board letters
            } else if (line.startsWith("/tab")) {
                readingBoard = false; // Set flag to false to stop reading board letters
            } else if (line.startsWith("dic")) {
                readingBoard = false; // Set flag to false to stop reading board letters and start reading dictionary words
            } else if (line.startsWith("/dic")) {
                // End of dictionary words
                break;
            } else {
                line = line.replaceAll(",", "");
                // Add line to boardLines if reading board letters, else add to dictionaryWords
                if (readingBoard) {
                    boardLines.add(line.trim());
                } else {
                    dictionaryWords.add(line.trim().toUpperCase()); // Convert to uppercase as words do not carry accents
                }
            }
        }
        populateBoard(boardLines);

        // Now, you have boardLines containing the board letters and dictionaryWords containing the dictionary words
        // Process boardLines and dictionaryWords as needed for your game
        // For example, you can print them to verify they were read correctly
        System.out.println("Letras de Grid");
        int count = 0;
        while (count < boardLines.size() -1) {
            System.out.println(boardLines.getStringIndex(count));
            count += 1;
        }
        System.out.println("Palabras de Diccionario");
        count = 0;
        while (count < dictionaryWords.size() -1) {
            System.out.println(dictionaryWords.getStringIndex(count));
            count += 1;
        }
    } catch (IOException e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Error Leyendo Archivo: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    }
    return dictionaryWords; 
}
    
private void populateBoard(LinkedList<String> boardLines) throws Exception {
    // Assuming JLabel components are named jLabel1, jLabel2, ..., jLabel16
    JLabel[] labels = {jLabel1, jLabel2, jLabel3, jLabel4, jLabel5, jLabel6, jLabel7, jLabel8, jLabel9, jLabel10, jLabel11, jLabel12, jLabel13, jLabel14, jLabel15, jLabel16};

    // Populate the JLabel components with board letters
    int index = 0;
    int count = 0;
    
    while (count <  boardLines.size() -1 ) {
        String boardLine = boardLines.getStringIndex(count);
        count +=1;
    for (int i = 0; i < boardLine.length(); i++) {
            labels[index].setText(String.valueOf(boardLine.charAt(i)));
            index++;
  }
    }
}



    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        try {
        for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
            System.out.println(info.getName());
            if ("Metal".equals(info.getName())) {
                javax.swing.UIManager.setLookAndFeel(info.getClassName());
                break;
            }
        }
    } catch (ClassNotFoundException ex) {
        java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (InstantiationException ex) {
        java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (IllegalAccessException ex) {
        java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (javax.swing.UnsupportedLookAndFeelException ex) {
        java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    }

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea DictionaryTextArea;
    private javax.swing.JButton FindWordButton;
    private javax.swing.JButton LoadButton;
    private javax.swing.JButton SaveButton;
    private javax.swing.JLabel TimeLabel;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables
}
